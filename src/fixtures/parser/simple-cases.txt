%% CASE expr simple OF EXPRESSION:

1 + 2 * 3

%% OK WITH:

binary Add (0..9)
  int 1 (0..1)
  binary Mul (4..9)
    int 2 (4..5)
    int 3 (8..9)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% CASE program simple OF PROGRAM:

class Main {
    main() : Int {
        1 + 2 * 3
    };
};

%% OK WITH:

class Main
  method main() : Int
    binary Add (40..49)
      int 1 (40..41)
      binary Mul (44..49)
        int 2 (44..45)
        int 3 (48..49)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% CASE expr error OF EXPRESSION:

1 + 2 *

%% ERROR WITH:

Error (7..7): UnexpectedTokenInExpr { token: Eof }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% CASE block OF EXPRESSION:

{
    1 + 2 * 3;
    4 + 5 + 6;
    7 * 8 + 9;
}

%% OK WITH:

block (0..48)
  binary Add (6..15)
    int 1 (6..7)
    binary Mul (10..15)
      int 2 (10..11)
      int 3 (14..15)
  binary Add (21..30)
    binary Add (21..26)
      int 4 (21..22)
      int 5 (25..26)
    int 6 (29..30)
  binary Add (36..45)
    binary Mul (36..41)
      int 7 (36..37)
      int 8 (40..41)
    int 9 (44..45)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% CASE block error recovery OF EXPRESSION:

{
    1 + 2 *;
    4 + + 6;
    * 8 + 9;
}

%% ERROR WITH:

Error (13..14): UnexpectedTokenInExpr { token: Semicolon }
